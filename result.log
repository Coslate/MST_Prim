rm -rf ../exec_output/Linked_List.o
rm -rf ../exec_output/Prim.o
rm -rf ../exec_output/Prim_main.o
rm -rf ./tags
g++ -g -Wall -O3 -std=c++11  -c ../Linked_List_ex/Linked_List.cpp  -I ./include  -I ../Fibonacci_Heap_ex/include  -I ../Linked_List_ex/include -o ../exec_output/Linked_List.o
g++ -g -Wall -O3 -std=c++11  -c ../Fibonacci_Heap_ex/Fibonacci_Heap.cpp  -I ./include  -I ../Fibonacci_Heap_ex/include  -I ../Linked_List_ex/include -o ../exec_output/Fibonacci_Heap.o
g++ -g -Wall -O3 -std=c++11  -c Prim.cpp  -I ./include  -I ../Fibonacci_Heap_ex/include  -I ../Linked_List_ex/include -o ../exec_output/Prim.o
/usr/local/bin/ctags -R ./*
/usr/local/bin/ctags -a ./include/* -a ../Fibonacci_Heap_ex/* -a ../Linked_List_ex/*
g++ -g -Wall -O3 -std=c++11   -I ./include  -I ../Fibonacci_Heap_ex/include  -I ../Linked_List_ex/include ../exec_output/Linked_List.o ../exec_output/Fibonacci_Heap.o ../exec_output/Prim.o Prim_main.cpp -o ../exec_output/Prim_main.o
../exec_output/Prim_main.o
-----------------LinkedListNode-----------------
node_a = (2147483647, 0x1e25130)
node_b = (2147483647, 0x1e25180)
node_h = (2147483647, 0x1e251d0)
node_i = (2147483647, 0x1e25220)
node_c = (2147483647, 0x1e25270)
node_g = (2147483647, 0x1e252c0)
node_f = (2147483647, 0x1e25310)
node_d = (2147483647, 0x1e25360)
node_e = (2147483647, 0x1e253b0)
----------------All node-----------------
all_node = [a, b, h, i, c, g, f, d, e]
-----------------FTNode-----------------
node_a_fib = (2147483647, 0x1e25520)
node_b_fib = (2147483647, 0x1e25560)
node_h_fib = (2147483647, 0x1e255a0)
node_i_fib = (2147483647, 0x1e255e0)
node_c_fib = (2147483647, 0x1e25620)
node_g_fib = (2147483647, 0x1e25660)
node_f_fib = (2147483647, 0x1e256a0)
node_d_fib = (2147483647, 0x1e256e0)
node_e_fib = (2147483647, 0x1e25720)
-----------------map_node_ll2ft-----------------
map_node_ll2ft[0x1e25130] = (2147483647, 0x1e25520)
map_node_ll2ft[0x1e25180] = (2147483647, 0x1e25560)
map_node_ll2ft[0x1e251d0] = (2147483647, 0x1e255a0)
map_node_ll2ft[0x1e25220] = (2147483647, 0x1e255e0)
map_node_ll2ft[0x1e25270] = (2147483647, 0x1e25620)
map_node_ll2ft[0x1e252c0] = (2147483647, 0x1e25660)
map_node_ll2ft[0x1e25310] = (2147483647, 0x1e256a0)
map_node_ll2ft[0x1e25360] = (2147483647, 0x1e256e0)
map_node_ll2ft[0x1e253b0] = (2147483647, 0x1e25720)
-----------------map_node_ft2ll-----------------
map_node_ft2ll[0x1e25520] = (2147483647, 0x1e25130)
map_node_ft2ll[0x1e25560] = (2147483647, 0x1e25180)
map_node_ft2ll[0x1e255a0] = (2147483647, 0x1e251d0)
map_node_ft2ll[0x1e255e0] = (2147483647, 0x1e25220)
map_node_ft2ll[0x1e25620] = (2147483647, 0x1e25270)
map_node_ft2ll[0x1e25660] = (2147483647, 0x1e252c0)
map_node_ft2ll[0x1e256a0] = (2147483647, 0x1e25310)
map_node_ft2ll[0x1e256e0] = (2147483647, 0x1e25360)
map_node_ft2ll[0x1e25720] = (2147483647, 0x1e253b0)
-----------------map_node_st2ll-----------------
map_node_st2ll[a] = (2147483647, 0x1e25130)
map_node_st2ll[b] = (2147483647, 0x1e25180)
map_node_st2ll[h] = (2147483647, 0x1e251d0)
map_node_st2ll[i] = (2147483647, 0x1e25220)
map_node_st2ll[c] = (2147483647, 0x1e25270)
map_node_st2ll[g] = (2147483647, 0x1e252c0)
map_node_st2ll[f] = (2147483647, 0x1e25310)
map_node_st2ll[d] = (2147483647, 0x1e25360)
map_node_st2ll[e] = (2147483647, 0x1e253b0)
-----------------Set Adjacent List of Graph(V, E)-----------------
-----------------AdjList::PrintAdjList, node_a-----------------
[4 8]
[b h]
[0x1e25e30 0x1e26040]
first = 0x1e25e30
last = 0x1e26040
map_weight[a] = [4(0x1e25130, 0x1e25180), 8(0x1e25130, 0x1e251d0)]
-----------------AdjList::PrintAdjList, node_b-----------------
[4 8 11]
[a c h]
[0x1e25f30 0x1e26190 0x1e26300]
first = 0x1e25f30
last = 0x1e26300
map_weight[b] = [4(0x1e25180, 0x1e25130), 8(0x1e25180, 0x1e25270), 11(0x1e25180, 0x1e251d0)]
-----------------AdjList::PrintAdjList, node_h-----------------
[8 11 1 7]
[a b g i]
[0x1e260a0 0x1e26340 0x1e26380 0x1e26540]
first = 0x1e260a0
last = 0x1e26540
map_weight[h] = [8(0x1e251d0, 0x1e25130), 11(0x1e251d0, 0x1e25180), 1(0x1e251d0, 0x1e252c0), 7(0x1e251d0, 0x1e25220)]
-----------------AdjList::PrintAdjList, node_c-----------------
[8 2 7 4]
[b i d f]
[0x1e261f0 0x1e268a0 0x1e26920 0x1e26a90]
first = 0x1e261f0
last = 0x1e26a90
map_weight[c] = [8(0x1e25270, 0x1e25180), 2(0x1e25270, 0x1e25220), 7(0x1e25270, 0x1e25360), 4(0x1e25270, 0x1e25310)]
-----------------AdjList::PrintAdjList, node_i-----------------
[7 6 2]
[h g c]
[0x1e265a0 0x1e26860 0x1e268e0]
first = 0x1e265a0
last = 0x1e268e0
map_weight[i] = [7(0x1e25220, 0x1e251d0), 6(0x1e25220, 0x1e252c0), 2(0x1e25220, 0x1e25270)]
-----------------AdjList::PrintAdjList, node_g-----------------
[1 2 6]
[h f i]
[0x1e263e0 0x1e266b0 0x1e26820]
first = 0x1e263e0
last = 0x1e26820
map_weight[g] = [1(0x1e252c0, 0x1e251d0), 2(0x1e252c0, 0x1e25310), 6(0x1e252c0, 0x1e25220)]
-----------------AdjList::PrintAdjList, node_d-----------------
[7 14 9]
[c f e]
[0x1e26980 0x1e26b50 0x1e26d40]
first = 0x1e26980
last = 0x1e26d40
map_weight[d] = [7(0x1e25360, 0x1e25270), 14(0x1e25360, 0x1e25310), 9(0x1e25360, 0x1e253b0)]
-----------------AdjList::PrintAdjList, node_e-----------------
[10 9]
[f d]
[0x1e26bf0 0x1e26d80]
first = 0x1e26bf0
last = 0x1e26d80
map_weight[e] = [10(0x1e253b0, 0x1e25310), 9(0x1e253b0, 0x1e25360)]
-----------------AdjList::PrintAdjList, node_f-----------------
[2 4 14 10]
[g c d e]
[0x1e26710 0x1e26ad0 0x1e26b10 0x1e26b90]
first = 0x1e26710
last = 0x1e26b90
map_weight[f] = [2(0x1e25310, 0x1e252c0), 4(0x1e25310, 0x1e25270), 14(0x1e25310, 0x1e25360), 10(0x1e25310, 0x1e253b0)]
-----------------Prim_Algorithm::InitialSet-----------------
##################################
#########      F0      ###########
##################################
(2147483647, 0x1e25560, 0  , False)
##################################
#########      F1      ###########
##################################
(2147483647, 0x1e255a0, 0  , False)
##################################
#########      F2      ###########
##################################
(2147483647, 0x1e255e0, 0  , False)
##################################
#########      F3      ###########
##################################
(2147483647, 0x1e25620, 0  , False)
##################################
#########      F4      ###########
##################################
(2147483647, 0x1e25660, 0  , False)
##################################
#########      F5      ###########
##################################
(2147483647, 0x1e256a0, 0  , False)
##################################
#########      F6      ###########
##################################
(2147483647, 0x1e256e0, 0  , False)
##################################
#########      F7      ###########
##################################
(2147483647, 0x1e25720, 0  , False)
##################################
#########      F8      ###########
##################################
(0  , 0x1e25520, 0  , False)
It is destructor.
It is AdjList destructor.
